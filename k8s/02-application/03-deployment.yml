apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-server
  namespace: go-hello-world
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      name: server-pods
      labels:
        app: server
    spec:
      containers:
      - name: server
        image: sing3demons/go-hello-world:0.3.6
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
              - cat
              - /tmp/live
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 5
        env:
          - name: PORT
            value: "8080"
          - name: MONGODB
            value: mongodb://adminuser:password123@mongo-service.database
          - name: DSN
            # value: host=pg-service.database user=postgresadmin password=admin123 dbname=postgresdb port=5432 sslmode=disable TimeZone=Asia/Bangkok
            valueFrom:
              secretKeyRef:
                key: pghost
                name: go-secret
          - name: APP_ENV
            value: production
          - name: REDIS_HOST
            value: redis-client.redis
          - name: REDIS_PORT
            value: "6379"
        ports:
        - containerPort: 8080
        volumeMounts:
            - mountPath: /uploads
              name: go-hello-world
      volumes:
        - name: go-hello-world
          persistentVolumeClaim:
            claimName: app-pvc 
